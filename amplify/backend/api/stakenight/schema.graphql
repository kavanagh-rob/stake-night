type Bet @model @auth(rules: [{allow: public}]) {
  id: ID!
  isProcessed: Boolean
  finalOdds: Float
  payout: Float
  result: String
  stake: Float!
  Horse: Horse @connection
  raceId: String!
  playerProfileId: String
  paymentStatus: String
  raceNumber: String
  playerName: String
  eventId: String
}

type PlayerProfile @model @auth(rules: [{allow: public}]) {
  id: ID!
  avatorUrl: String
  name: String!
  balance: Float
  payments: AWSJSON
  eventId: String
  userId: String
}

type Result @model @auth(rules: [{allow: public}]) {
  id: ID!
  videoUrl: String
  totalPot: Float
  eventId: String
  raceId: String
  finalOdds: Float
  raceNumber: Int
  winningHorseId: String
  winningHorseName: String
  winningHorseNumber: Int
}

type Horse @model @key(name: "byRace", fields: ["raceID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  number: Int!
  name: String!
  liveOdds: Float
  totalBetsForHorse: Float
  raceID: ID!
}

type Race @model @key(name: "byEvent", fields: ["eventID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  isActive: Boolean
  name: String
  payoutFactor: Float
  raceCardImageUrl: String
  number: Int
  time: String
  showPayoutFactor: Boolean
  eventID: ID!
  Horses: [Horse] @connection(keyName: "byRace", fields: ["id"])
  Result: Result @connection
  isCurrentRace: Boolean
}

type Event @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: String
  eventImage: String
  name: String
  organiser: String
  Races: [Race] @connection(keyName: "byEvent", fields: ["id"])
  type: String
}
 